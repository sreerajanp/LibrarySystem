// <auto-generated />
using System;
using Library.Book.Service.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Shared.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Library.Shared.Entities.BookRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library.Shared.Entities.BorrowRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("BorrowedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ReturnedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserRecordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookRecordId");

                    b.HasIndex("UserRecordId");

                    b.ToTable("BorrowRecords");
                });

            modelBuilder.Entity("Library.Shared.Entities.UserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Library.Shared.Entities.BorrowRecord", b =>
                {
                    b.HasOne("Library.Shared.Entities.BookRecord", "BookRecord")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("BookRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Shared.Entities.UserRecord", "UserRecord")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("UserRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookRecord");

                    b.Navigation("UserRecord");
                });

            modelBuilder.Entity("Library.Shared.Entities.BookRecord", b =>
                {
                    b.Navigation("BorrowRecords");
                });

            modelBuilder.Entity("Library.Shared.Entities.UserRecord", b =>
                {
                    b.Navigation("BorrowRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
